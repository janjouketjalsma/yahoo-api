<?php
/**
 * CampaignServiceTargetRoasBiddingScheme
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Yahoo\Model;

use \ArrayAccess;
use \Yahoo\ObjectSerializer;

/**
 * CampaignServiceTargetRoasBiddingScheme Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;CampaignServiceTargetRoasBiddingSchemeオブジェクトは、広告費用対効果の目標値の自動入札設定情報を表します。 （BiddingStrategyService以外用のオブジェクトです。）&lt;br&gt;ADD時、BiddingStrategyTypeがTARGET_ROASの場合、必須となり、それ以外では省略可能となります。&lt;/div&gt;&lt;div lang&#x3D;\&quot;en\&quot;&gt;CampaignServiceTargetRoasBiddingScheme object displays Auto Bidding setting for Target ROAS. *This is an object for anything other than BiddingStrategyService.&lt;br&gt;This field is required when BiddingStrategyType is &#39;TARGET_ROAS&#39; in ADD operation. For other BiddingStrategyType, this field is optional in ADD operation. &lt;/div&gt;
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CampaignServiceTargetRoasBiddingScheme implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CampaignServiceTargetRoasBiddingScheme';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'bidCeiling' => 'int',
        'bidFloor' => 'int',
        'targetRoas' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'bidCeiling' => 'int64',
        'bidFloor' => 'int64',
        'targetRoas' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bidCeiling' => 'bidCeiling',
        'bidFloor' => 'bidFloor',
        'targetRoas' => 'targetRoas'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bidCeiling' => 'setBidCeiling',
        'bidFloor' => 'setBidFloor',
        'targetRoas' => 'setTargetRoas'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bidCeiling' => 'getBidCeiling',
        'bidFloor' => 'getBidFloor',
        'targetRoas' => 'getTargetRoas'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['bidCeiling'] = isset($data['bidCeiling']) ? $data['bidCeiling'] : null;
        $this->container['bidFloor'] = isset($data['bidFloor']) ? $data['bidFloor'] : null;
        $this->container['targetRoas'] = isset($data['targetRoas']) ? $data['targetRoas'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bidCeiling
     *
     * @return int|null
     */
    public function getBidCeiling()
    {
        return $this->container['bidCeiling'];
    }

    /**
     * Sets bidCeiling
     *
     * @param int|null $bidCeiling <div lang=\"ja\">入札価格の上限です。<br>このフィールドは省略可能となります。その際、デフォルト設定値は0となります。<br>※「0」が設定された場合、上限設定はありません。</div><div lang=\"en\">Limit of bid (CPC).<br>This field is optional. The default value will be 0. <br>* No limits if &#34;0&#34; is set.</div>
     *
     * @return $this
     */
    public function setBidCeiling($bidCeiling)
    {
        $this->container['bidCeiling'] = $bidCeiling;

        return $this;
    }

    /**
     * Gets bidFloor
     *
     * @return int|null
     */
    public function getBidFloor()
    {
        return $this->container['bidFloor'];
    }

    /**
     * Sets bidFloor
     *
     * @param int|null $bidFloor <div lang=\"ja\">入札価格の下限です。<br>このフィールドは省略可能となります。その際、デフォルト設定値は0となります。<br>※ 設定を解除する場合は「0」を指定します。</div><div lang=\"en\">Minimum CPC.<br>This field is optional. The default value will be 0. <br>* Set &#34;0&#34; to deactivate.</div>
     *
     * @return $this
     */
    public function setBidFloor($bidFloor)
    {
        $this->container['bidFloor'] = $bidFloor;

        return $this;
    }

    /**
     * Gets targetRoas
     *
     * @return double|null
     */
    public function getTargetRoas()
    {
        return $this->container['targetRoas'];
    }

    /**
     * Sets targetRoas
     *
     * @param double|null $targetRoas <div lang=\"ja\">広告費用対効果の目標値です。<br>0.01 ～ 1000.00（1% ～ 100000%）の範囲内のみ 許容します。<br>ADD時およびSET時、このフィールドは必須となります。 <br>※ROAS: Return On Advertising Spend</div><div lang=\"en\">Target ROAS (Return On Advertising Spend)<br>* Limit range: 0.01 - 1000.00 (1% - 100000%)<br>This field is required in ADD and SET operation. </div>
     *
     * @return $this
     */
    public function setTargetRoas($targetRoas)
    {
        $this->container['targetRoas'] = $targetRoas;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


