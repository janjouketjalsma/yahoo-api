<?php
/**
 * RetargetingListServiceTargetingList
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Yahoo\Model;

use \ArrayAccess;
use \Yahoo\ObjectSerializer;

/**
 * RetargetingListServiceTargetingList Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;RetargetingListServiceTargetingListは、リターゲティング情報（ターゲットリスト）を保持するオブジェクトです。&lt;/div&gt;&lt;div lang&#x3D;\&quot;en\&quot;&gt;RetargetingListServiceTargetingList is an object that holds retargeting information (target list).&lt;/div&gt;
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RetargetingListServiceTargetingList implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RetargetingListServiceTargetingList';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'accountId' => 'int',
        'closingReason' => '\Yahoo\Model\RetargetingListServiceClosingReason',
        'defaultTargetList' => '\Yahoo\Model\RetargetingListServiceDefaultTargetList',
        'logicalTargetList' => '\Yahoo\Model\RetargetingListServiceLogicalTargetList',
        'reach' => 'int',
        'reachStorageSpan' => 'int',
        'reachStorageStatus' => '\Yahoo\Model\RetargetingListServiceReachStorageStatus',
        'retargetingAccountStatus' => '\Yahoo\Model\RetargetingListServiceRetargetingAccountStatus',
        'ruleBaseTargetList' => '\Yahoo\Model\RetargetingListServiceRuleBaseTargetList',
        'targetListDescription' => 'string',
        'targetListId' => 'int',
        'targetListName' => 'string',
        'targetListOwner' => '\Yahoo\Model\RetargetingListServiceTargetListOwner',
        'targetListTrackId' => 'int',
        'targetListType' => '\Yahoo\Model\RetargetingListServiceTargetListType'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'accountId' => 'int64',
        'closingReason' => null,
        'defaultTargetList' => null,
        'logicalTargetList' => null,
        'reach' => 'int64',
        'reachStorageSpan' => 'int64',
        'reachStorageStatus' => null,
        'retargetingAccountStatus' => null,
        'ruleBaseTargetList' => null,
        'targetListDescription' => null,
        'targetListId' => 'int64',
        'targetListName' => null,
        'targetListOwner' => null,
        'targetListTrackId' => 'int64',
        'targetListType' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountId' => 'accountId',
        'closingReason' => 'closingReason',
        'defaultTargetList' => 'defaultTargetList',
        'logicalTargetList' => 'logicalTargetList',
        'reach' => 'reach',
        'reachStorageSpan' => 'reachStorageSpan',
        'reachStorageStatus' => 'reachStorageStatus',
        'retargetingAccountStatus' => 'retargetingAccountStatus',
        'ruleBaseTargetList' => 'ruleBaseTargetList',
        'targetListDescription' => 'targetListDescription',
        'targetListId' => 'targetListId',
        'targetListName' => 'targetListName',
        'targetListOwner' => 'targetListOwner',
        'targetListTrackId' => 'targetListTrackId',
        'targetListType' => 'targetListType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountId' => 'setAccountId',
        'closingReason' => 'setClosingReason',
        'defaultTargetList' => 'setDefaultTargetList',
        'logicalTargetList' => 'setLogicalTargetList',
        'reach' => 'setReach',
        'reachStorageSpan' => 'setReachStorageSpan',
        'reachStorageStatus' => 'setReachStorageStatus',
        'retargetingAccountStatus' => 'setRetargetingAccountStatus',
        'ruleBaseTargetList' => 'setRuleBaseTargetList',
        'targetListDescription' => 'setTargetListDescription',
        'targetListId' => 'setTargetListId',
        'targetListName' => 'setTargetListName',
        'targetListOwner' => 'setTargetListOwner',
        'targetListTrackId' => 'setTargetListTrackId',
        'targetListType' => 'setTargetListType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountId' => 'getAccountId',
        'closingReason' => 'getClosingReason',
        'defaultTargetList' => 'getDefaultTargetList',
        'logicalTargetList' => 'getLogicalTargetList',
        'reach' => 'getReach',
        'reachStorageSpan' => 'getReachStorageSpan',
        'reachStorageStatus' => 'getReachStorageStatus',
        'retargetingAccountStatus' => 'getRetargetingAccountStatus',
        'ruleBaseTargetList' => 'getRuleBaseTargetList',
        'targetListDescription' => 'getTargetListDescription',
        'targetListId' => 'getTargetListId',
        'targetListName' => 'getTargetListName',
        'targetListOwner' => 'getTargetListOwner',
        'targetListTrackId' => 'getTargetListTrackId',
        'targetListType' => 'getTargetListType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountId'] = isset($data['accountId']) ? $data['accountId'] : null;
        $this->container['closingReason'] = isset($data['closingReason']) ? $data['closingReason'] : null;
        $this->container['defaultTargetList'] = isset($data['defaultTargetList']) ? $data['defaultTargetList'] : null;
        $this->container['logicalTargetList'] = isset($data['logicalTargetList']) ? $data['logicalTargetList'] : null;
        $this->container['reach'] = isset($data['reach']) ? $data['reach'] : null;
        $this->container['reachStorageSpan'] = isset($data['reachStorageSpan']) ? $data['reachStorageSpan'] : null;
        $this->container['reachStorageStatus'] = isset($data['reachStorageStatus']) ? $data['reachStorageStatus'] : null;
        $this->container['retargetingAccountStatus'] = isset($data['retargetingAccountStatus']) ? $data['retargetingAccountStatus'] : null;
        $this->container['ruleBaseTargetList'] = isset($data['ruleBaseTargetList']) ? $data['ruleBaseTargetList'] : null;
        $this->container['targetListDescription'] = isset($data['targetListDescription']) ? $data['targetListDescription'] : null;
        $this->container['targetListId'] = isset($data['targetListId']) ? $data['targetListId'] : null;
        $this->container['targetListName'] = isset($data['targetListName']) ? $data['targetListName'] : null;
        $this->container['targetListOwner'] = isset($data['targetListOwner']) ? $data['targetListOwner'] : null;
        $this->container['targetListTrackId'] = isset($data['targetListTrackId']) ? $data['targetListTrackId'] : null;
        $this->container['targetListType'] = isset($data['targetListType']) ? $data['targetListType'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountId
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param int|null $accountId <div lang=\"ja\">アカウントIDです。<br> このフィールドは、いずれの場合でも必須となります。</div><div lang=\"en\">Account  ID. <br>This field is required in any cases.</div>
     *
     * @return $this
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets closingReason
     *
     * @return \Yahoo\Model\RetargetingListServiceClosingReason|null
     */
    public function getClosingReason()
    {
        return $this->container['closingReason'];
    }

    /**
     * Sets closingReason
     *
     * @param \Yahoo\Model\RetargetingListServiceClosingReason|null $closingReason closingReason
     *
     * @return $this
     */
    public function setClosingReason($closingReason)
    {
        $this->container['closingReason'] = $closingReason;

        return $this;
    }

    /**
     * Gets defaultTargetList
     *
     * @return \Yahoo\Model\RetargetingListServiceDefaultTargetList|null
     */
    public function getDefaultTargetList()
    {
        return $this->container['defaultTargetList'];
    }

    /**
     * Sets defaultTargetList
     *
     * @param \Yahoo\Model\RetargetingListServiceDefaultTargetList|null $defaultTargetList defaultTargetList
     *
     * @return $this
     */
    public function setDefaultTargetList($defaultTargetList)
    {
        $this->container['defaultTargetList'] = $defaultTargetList;

        return $this;
    }

    /**
     * Gets logicalTargetList
     *
     * @return \Yahoo\Model\RetargetingListServiceLogicalTargetList|null
     */
    public function getLogicalTargetList()
    {
        return $this->container['logicalTargetList'];
    }

    /**
     * Sets logicalTargetList
     *
     * @param \Yahoo\Model\RetargetingListServiceLogicalTargetList|null $logicalTargetList logicalTargetList
     *
     * @return $this
     */
    public function setLogicalTargetList($logicalTargetList)
    {
        $this->container['logicalTargetList'] = $logicalTargetList;

        return $this;
    }

    /**
     * Gets reach
     *
     * @return int|null
     */
    public function getReach()
    {
        return $this->container['reach'];
    }

    /**
     * Sets reach
     *
     * @param int|null $reach <div lang=\"ja\">リストに蓄積されているユーザー数です。</div><div lang=\"en\">Number of users stored to the list.</div>
     *
     * @return $this
     */
    public function setReach($reach)
    {
        $this->container['reach'] = $reach;

        return $this;
    }

    /**
     * Gets reachStorageSpan
     *
     * @return int|null
     */
    public function getReachStorageSpan()
    {
        return $this->container['reachStorageSpan'];
    }

    /**
     * Sets reachStorageSpan
     *
     * @param int|null $reachStorageSpan <div lang=\"ja\">Cookieを保持する日数です。<br> SET時、このフィールドは省略可能となります。<br>LogicalTargetListの場合、SET時にこのフィールドは無視されます。<br>※Default：180<br>※1-540日まで設定可能です。</div><div lang=\"en\">Days to hold Cookie. <br>This field is optional in SET operation. <br> For LogicalTargetList, this field will be ignored  in SET operation.<br>*Default: 180<br>*Can set from 1-540 days.</div>
     *
     * @return $this
     */
    public function setReachStorageSpan($reachStorageSpan)
    {
        $this->container['reachStorageSpan'] = $reachStorageSpan;

        return $this;
    }

    /**
     * Gets reachStorageStatus
     *
     * @return \Yahoo\Model\RetargetingListServiceReachStorageStatus|null
     */
    public function getReachStorageStatus()
    {
        return $this->container['reachStorageStatus'];
    }

    /**
     * Sets reachStorageStatus
     *
     * @param \Yahoo\Model\RetargetingListServiceReachStorageStatus|null $reachStorageStatus reachStorageStatus
     *
     * @return $this
     */
    public function setReachStorageStatus($reachStorageStatus)
    {
        $this->container['reachStorageStatus'] = $reachStorageStatus;

        return $this;
    }

    /**
     * Gets retargetingAccountStatus
     *
     * @return \Yahoo\Model\RetargetingListServiceRetargetingAccountStatus|null
     */
    public function getRetargetingAccountStatus()
    {
        return $this->container['retargetingAccountStatus'];
    }

    /**
     * Sets retargetingAccountStatus
     *
     * @param \Yahoo\Model\RetargetingListServiceRetargetingAccountStatus|null $retargetingAccountStatus retargetingAccountStatus
     *
     * @return $this
     */
    public function setRetargetingAccountStatus($retargetingAccountStatus)
    {
        $this->container['retargetingAccountStatus'] = $retargetingAccountStatus;

        return $this;
    }

    /**
     * Gets ruleBaseTargetList
     *
     * @return \Yahoo\Model\RetargetingListServiceRuleBaseTargetList|null
     */
    public function getRuleBaseTargetList()
    {
        return $this->container['ruleBaseTargetList'];
    }

    /**
     * Sets ruleBaseTargetList
     *
     * @param \Yahoo\Model\RetargetingListServiceRuleBaseTargetList|null $ruleBaseTargetList ruleBaseTargetList
     *
     * @return $this
     */
    public function setRuleBaseTargetList($ruleBaseTargetList)
    {
        $this->container['ruleBaseTargetList'] = $ruleBaseTargetList;

        return $this;
    }

    /**
     * Gets targetListDescription
     *
     * @return string|null
     */
    public function getTargetListDescription()
    {
        return $this->container['targetListDescription'];
    }

    /**
     * Sets targetListDescription
     *
     * @param string|null $targetListDescription <div lang=\"ja\">ターゲットリストの説明です。<br>このフィールドは、いずれの場合でも省略可能となります。</div><div lang=\"en\">Description  of Target List. <br>This field is optional in any cases.</div>
     *
     * @return $this
     */
    public function setTargetListDescription($targetListDescription)
    {
        $this->container['targetListDescription'] = $targetListDescription;

        return $this;
    }

    /**
     * Gets targetListId
     *
     * @return int|null
     */
    public function getTargetListId()
    {
        return $this->container['targetListId'];
    }

    /**
     * Sets targetListId
     *
     * @param int|null $targetListId <div lang=\"ja\">ターゲットリストIDです。<br>SET時、このフィールドは必須となります。</div><div lang=\"en\">Target  List ID. <br>This field is required in SET operation.</div>
     *
     * @return $this
     */
    public function setTargetListId($targetListId)
    {
        $this->container['targetListId'] = $targetListId;

        return $this;
    }

    /**
     * Gets targetListName
     *
     * @return string|null
     */
    public function getTargetListName()
    {
        return $this->container['targetListName'];
    }

    /**
     * Sets targetListName
     *
     * @param string|null $targetListName <div lang=\"ja\">ターゲットリスト名です。<br>ADD時にこのフィールドは必須となり、SET時にこのフィールドは省略可能となります。</div><div lang=\"en\">Target  List name. <br>This field is required in ADD operation, and is optional in SET operation.</div>
     *
     * @return $this
     */
    public function setTargetListName($targetListName)
    {
        $this->container['targetListName'] = $targetListName;

        return $this;
    }

    /**
     * Gets targetListOwner
     *
     * @return \Yahoo\Model\RetargetingListServiceTargetListOwner|null
     */
    public function getTargetListOwner()
    {
        return $this->container['targetListOwner'];
    }

    /**
     * Sets targetListOwner
     *
     * @param \Yahoo\Model\RetargetingListServiceTargetListOwner|null $targetListOwner targetListOwner
     *
     * @return $this
     */
    public function setTargetListOwner($targetListOwner)
    {
        $this->container['targetListOwner'] = $targetListOwner;

        return $this;
    }

    /**
     * Gets targetListTrackId
     *
     * @return int|null
     */
    public function getTargetListTrackId()
    {
        return $this->container['targetListTrackId'];
    }

    /**
     * Sets targetListTrackId
     *
     * @param int|null $targetListTrackId <div lang=\"ja\">ターゲットリストのトラッキング用IDです。</div><div lang=\"en\">Tracking ID of Target list.</div>
     *
     * @return $this
     */
    public function setTargetListTrackId($targetListTrackId)
    {
        $this->container['targetListTrackId'] = $targetListTrackId;

        return $this;
    }

    /**
     * Gets targetListType
     *
     * @return \Yahoo\Model\RetargetingListServiceTargetListType|null
     */
    public function getTargetListType()
    {
        return $this->container['targetListType'];
    }

    /**
     * Sets targetListType
     *
     * @param \Yahoo\Model\RetargetingListServiceTargetListType|null $targetListType targetListType
     *
     * @return $this
     */
    public function setTargetListType($targetListType)
    {
        $this->container['targetListType'] = $targetListType;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


