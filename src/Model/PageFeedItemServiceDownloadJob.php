<?php
/**
 * PageFeedItemServiceDownloadJob
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Yahoo\Model;

use \ArrayAccess;
use \Yahoo\ObjectSerializer;

/**
 * PageFeedItemServiceDownloadJob Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;PageFeedItemServiceDownloadJobオブジェクトは、ページフィードアイテム情報をダウンロードする処理内容を格納します。&lt;/div&gt;&lt;div lang&#x3D;\&quot;en\&quot;&gt;PageFeedItemServiceDownloadJob object retains contents of page feed item information for download.&lt;/div&gt;
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PageFeedItemServiceDownloadJob implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'PageFeedItemServiceDownloadJob';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'accountId' => 'int',
        'bulkEncoding' => '\Yahoo\Model\PageFeedItemServiceBulkEncoding',
        'bulkLang' => '\Yahoo\Model\PageFeedItemServiceBulkLang',
        'bulkOutput' => '\Yahoo\Model\PageFeedItemServiceBulkOutput',
        'downloadJobStatus' => '\Yahoo\Model\PageFeedItemServiceDownloadJobStatus',
        'endDate' => 'string',
        'feedIds' => 'int[]',
        'jobId' => 'int',
        'progress' => 'int',
        'startDate' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'accountId' => 'int64',
        'bulkEncoding' => null,
        'bulkLang' => null,
        'bulkOutput' => null,
        'downloadJobStatus' => null,
        'endDate' => null,
        'feedIds' => 'int64',
        'jobId' => 'int64',
        'progress' => 'int32',
        'startDate' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountId' => 'accountId',
        'bulkEncoding' => 'bulkEncoding',
        'bulkLang' => 'bulkLang',
        'bulkOutput' => 'bulkOutput',
        'downloadJobStatus' => 'downloadJobStatus',
        'endDate' => 'endDate',
        'feedIds' => 'feedIds',
        'jobId' => 'jobId',
        'progress' => 'progress',
        'startDate' => 'startDate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountId' => 'setAccountId',
        'bulkEncoding' => 'setBulkEncoding',
        'bulkLang' => 'setBulkLang',
        'bulkOutput' => 'setBulkOutput',
        'downloadJobStatus' => 'setDownloadJobStatus',
        'endDate' => 'setEndDate',
        'feedIds' => 'setFeedIds',
        'jobId' => 'setJobId',
        'progress' => 'setProgress',
        'startDate' => 'setStartDate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountId' => 'getAccountId',
        'bulkEncoding' => 'getBulkEncoding',
        'bulkLang' => 'getBulkLang',
        'bulkOutput' => 'getBulkOutput',
        'downloadJobStatus' => 'getDownloadJobStatus',
        'endDate' => 'getEndDate',
        'feedIds' => 'getFeedIds',
        'jobId' => 'getJobId',
        'progress' => 'getProgress',
        'startDate' => 'getStartDate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountId'] = isset($data['accountId']) ? $data['accountId'] : null;
        $this->container['bulkEncoding'] = isset($data['bulkEncoding']) ? $data['bulkEncoding'] : null;
        $this->container['bulkLang'] = isset($data['bulkLang']) ? $data['bulkLang'] : null;
        $this->container['bulkOutput'] = isset($data['bulkOutput']) ? $data['bulkOutput'] : null;
        $this->container['downloadJobStatus'] = isset($data['downloadJobStatus']) ? $data['downloadJobStatus'] : null;
        $this->container['endDate'] = isset($data['endDate']) ? $data['endDate'] : null;
        $this->container['feedIds'] = isset($data['feedIds']) ? $data['feedIds'] : null;
        $this->container['jobId'] = isset($data['jobId']) ? $data['jobId'] : null;
        $this->container['progress'] = isset($data['progress']) ? $data['progress'] : null;
        $this->container['startDate'] = isset($data['startDate']) ? $data['startDate'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountId
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param int|null $accountId <div lang=\"ja\">アカウントIDです。<br>このフィールドは必須です。</div><div lang=\"en\">Account ID. <br>This field is required.</div>
     *
     * @return $this
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets bulkEncoding
     *
     * @return \Yahoo\Model\PageFeedItemServiceBulkEncoding|null
     */
    public function getBulkEncoding()
    {
        return $this->container['bulkEncoding'];
    }

    /**
     * Sets bulkEncoding
     *
     * @param \Yahoo\Model\PageFeedItemServiceBulkEncoding|null $bulkEncoding bulkEncoding
     *
     * @return $this
     */
    public function setBulkEncoding($bulkEncoding)
    {
        $this->container['bulkEncoding'] = $bulkEncoding;

        return $this;
    }

    /**
     * Gets bulkLang
     *
     * @return \Yahoo\Model\PageFeedItemServiceBulkLang|null
     */
    public function getBulkLang()
    {
        return $this->container['bulkLang'];
    }

    /**
     * Sets bulkLang
     *
     * @param \Yahoo\Model\PageFeedItemServiceBulkLang|null $bulkLang bulkLang
     *
     * @return $this
     */
    public function setBulkLang($bulkLang)
    {
        $this->container['bulkLang'] = $bulkLang;

        return $this;
    }

    /**
     * Gets bulkOutput
     *
     * @return \Yahoo\Model\PageFeedItemServiceBulkOutput|null
     */
    public function getBulkOutput()
    {
        return $this->container['bulkOutput'];
    }

    /**
     * Sets bulkOutput
     *
     * @param \Yahoo\Model\PageFeedItemServiceBulkOutput|null $bulkOutput bulkOutput
     *
     * @return $this
     */
    public function setBulkOutput($bulkOutput)
    {
        $this->container['bulkOutput'] = $bulkOutput;

        return $this;
    }

    /**
     * Gets downloadJobStatus
     *
     * @return \Yahoo\Model\PageFeedItemServiceDownloadJobStatus|null
     */
    public function getDownloadJobStatus()
    {
        return $this->container['downloadJobStatus'];
    }

    /**
     * Sets downloadJobStatus
     *
     * @param \Yahoo\Model\PageFeedItemServiceDownloadJobStatus|null $downloadJobStatus downloadJobStatus
     *
     * @return $this
     */
    public function setDownloadJobStatus($downloadJobStatus)
    {
        $this->container['downloadJobStatus'] = $downloadJobStatus;

        return $this;
    }

    /**
     * Gets endDate
     *
     * @return string|null
     */
    public function getEndDate()
    {
        return $this->container['endDate'];
    }

    /**
     * Sets endDate
     *
     * @param string|null $endDate <div lang=\"ja\">ジョブの終了日です。<br>このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。<br>形式：yyyyMMddHHmmss</div><div lang=\"en\">End date of job. <br> Although this field will be returned in the response, it will be ignored on input.  <br>Format:yyyyMMddHHmmss</div>
     *
     * @return $this
     */
    public function setEndDate($endDate)
    {
        $this->container['endDate'] = $endDate;

        return $this;
    }

    /**
     * Gets feedIds
     *
     * @return int[]|null
     */
    public function getFeedIds()
    {
        return $this->container['feedIds'];
    }

    /**
     * Sets feedIds
     *
     * @param int[]|null $feedIds <div lang=\"ja\">フィードIDです。<br>このフィールドは必須です。</div><div lang=\"en\">Feed ID. <br> This field is required.</div>
     *
     * @return $this
     */
    public function setFeedIds($feedIds)
    {
        $this->container['feedIds'] = $feedIds;

        return $this;
    }

    /**
     * Gets jobId
     *
     * @return int|null
     */
    public function getJobId()
    {
        return $this->container['jobId'];
    }

    /**
     * Sets jobId
     *
     * @param int|null $jobId <div lang=\"ja\">ジョブIDです。<br>このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div><div lang=\"en\">Job ID. <br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setJobId($jobId)
    {
        $this->container['jobId'] = $jobId;

        return $this;
    }

    /**
     * Gets progress
     *
     * @return int|null
     */
    public function getProgress()
    {
        return $this->container['progress'];
    }

    /**
     * Sets progress
     *
     * @param int|null $progress <div lang=\"ja\">ジョブの進捗状況です。<br>このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div><div lang=\"en\">Progress of page feed item job. <br> Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setProgress($progress)
    {
        $this->container['progress'] = $progress;

        return $this;
    }

    /**
     * Gets startDate
     *
     * @return string|null
     */
    public function getStartDate()
    {
        return $this->container['startDate'];
    }

    /**
     * Sets startDate
     *
     * @param string|null $startDate <div lang=\"ja\">ジョブの開始日です。<br>このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。 <br>形式：yyyyMMddHHmmss </div><div lang=\"en\">Start date of job. <br> Although this field will be returned in the response, it will be ignored on input. <br>Format:yyyyMMddHHmmss</div>
     *
     * @return $this
     */
    public function setStartDate($startDate)
    {
        $this->container['startDate'] = $startDate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


