<?php
/**
 * AdGroupRetargetingList
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Yahoo\Model;

use \ArrayAccess;
use \Yahoo\ObjectSerializer;

/**
 * AdGroupRetargetingList Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;AdGroupRetargetingListは、広告グループレベルでのターゲットリスト設定を保持するオブジェクトです。&lt;/div&gt;&lt;div lang&#x3D;\&quot;en\&quot;&gt;AdGroupRetargetingList is an object that holds ad group user list information.&lt;/div&gt;
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class AdGroupRetargetingList implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'AdGroupRetargetingList';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'accountId' => 'int',
        'adGroupId' => 'int',
        'adGroupName' => 'string',
        'bidMultiplier' => 'double',
        'campaignId' => 'int',
        'campaignName' => 'string',
        'criterionTargetList' => '\Yahoo\Model\AdGroupRetargetingListServiceCriterionTargetList',
        'excludedType' => '\Yahoo\Model\AdGroupRetargetingListServiceExcludedType'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'accountId' => 'int64',
        'adGroupId' => 'int64',
        'adGroupName' => null,
        'bidMultiplier' => 'double',
        'campaignId' => 'int64',
        'campaignName' => null,
        'criterionTargetList' => null,
        'excludedType' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'accountId' => 'accountId',
        'adGroupId' => 'adGroupId',
        'adGroupName' => 'adGroupName',
        'bidMultiplier' => 'bidMultiplier',
        'campaignId' => 'campaignId',
        'campaignName' => 'campaignName',
        'criterionTargetList' => 'criterionTargetList',
        'excludedType' => 'excludedType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'accountId' => 'setAccountId',
        'adGroupId' => 'setAdGroupId',
        'adGroupName' => 'setAdGroupName',
        'bidMultiplier' => 'setBidMultiplier',
        'campaignId' => 'setCampaignId',
        'campaignName' => 'setCampaignName',
        'criterionTargetList' => 'setCriterionTargetList',
        'excludedType' => 'setExcludedType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'accountId' => 'getAccountId',
        'adGroupId' => 'getAdGroupId',
        'adGroupName' => 'getAdGroupName',
        'bidMultiplier' => 'getBidMultiplier',
        'campaignId' => 'getCampaignId',
        'campaignName' => 'getCampaignName',
        'criterionTargetList' => 'getCriterionTargetList',
        'excludedType' => 'getExcludedType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['accountId'] = isset($data['accountId']) ? $data['accountId'] : null;
        $this->container['adGroupId'] = isset($data['adGroupId']) ? $data['adGroupId'] : null;
        $this->container['adGroupName'] = isset($data['adGroupName']) ? $data['adGroupName'] : null;
        $this->container['bidMultiplier'] = isset($data['bidMultiplier']) ? $data['bidMultiplier'] : null;
        $this->container['campaignId'] = isset($data['campaignId']) ? $data['campaignId'] : null;
        $this->container['campaignName'] = isset($data['campaignName']) ? $data['campaignName'] : null;
        $this->container['criterionTargetList'] = isset($data['criterionTargetList']) ? $data['criterionTargetList'] : null;
        $this->container['excludedType'] = isset($data['excludedType']) ? $data['excludedType'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets accountId
     *
     * @return int|null
     */
    public function getAccountId()
    {
        return $this->container['accountId'];
    }

    /**
     * Sets accountId
     *
     * @param int|null $accountId <div lang=\"ja\">アカウントIDです。<br>このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div><div lang=\"en\">Account ID.<br>Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAccountId($accountId)
    {
        $this->container['accountId'] = $accountId;

        return $this;
    }

    /**
     * Gets adGroupId
     *
     * @return int|null
     */
    public function getAdGroupId()
    {
        return $this->container['adGroupId'];
    }

    /**
     * Sets adGroupId
     *
     * @param int|null $adGroupId <div lang=\"ja\">広告グループIDです。<br>このフィールドは、いずれの場合でも必須です。</div><div lang=\"en\">Ad group ID.<br>This field is required in any cases. </div>
     *
     * @return $this
     */
    public function setAdGroupId($adGroupId)
    {
        $this->container['adGroupId'] = $adGroupId;

        return $this;
    }

    /**
     * Gets adGroupName
     *
     * @return string|null
     */
    public function getAdGroupName()
    {
        return $this->container['adGroupName'];
    }

    /**
     * Sets adGroupName
     *
     * @param string|null $adGroupName <div lang=\"ja\">広告グループ名です。<br>このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div><div lang=\"en\">Ad group name.<br>Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setAdGroupName($adGroupName)
    {
        $this->container['adGroupName'] = $adGroupName;

        return $this;
    }

    /**
     * Gets bidMultiplier
     *
     * @return double|null
     */
    public function getBidMultiplier()
    {
        return $this->container['bidMultiplier'];
    }

    /**
     * Sets bidMultiplier
     *
     * @param double|null $bidMultiplier <div lang=\"ja\">MaxCPC上昇値です。<br>このフィールドは省略可能となります。その際、デフォルト設定値は1.00となります。</div><div lang=\"en\">Maximum CPC increase value.<br>This field is optional. The default value will be 1.00.</div>
     *
     * @return $this
     */
    public function setBidMultiplier($bidMultiplier)
    {
        $this->container['bidMultiplier'] = $bidMultiplier;

        return $this;
    }

    /**
     * Gets campaignId
     *
     * @return int|null
     */
    public function getCampaignId()
    {
        return $this->container['campaignId'];
    }

    /**
     * Sets campaignId
     *
     * @param int|null $campaignId <div lang=\"ja\">キャンペーンIDです。<br>このフィールドは、いずれの場合でも必須です。</div><div lang=\"en\">Campaign ID.<br>This field is required in any cases. </div>
     *
     * @return $this
     */
    public function setCampaignId($campaignId)
    {
        $this->container['campaignId'] = $campaignId;

        return $this;
    }

    /**
     * Gets campaignName
     *
     * @return string|null
     */
    public function getCampaignName()
    {
        return $this->container['campaignName'];
    }

    /**
     * Sets campaignName
     *
     * @param string|null $campaignName <div lang=\"ja\">キャンペーン名です。<br>このフィールドは、レスポンスの際に返却されますが、リクエストの際には無視されます。</div><div lang=\"en\">Campaign name.<br>Although this field will be returned in the response, it will be ignored on input. </div>
     *
     * @return $this
     */
    public function setCampaignName($campaignName)
    {
        $this->container['campaignName'] = $campaignName;

        return $this;
    }

    /**
     * Gets criterionTargetList
     *
     * @return \Yahoo\Model\AdGroupRetargetingListServiceCriterionTargetList|null
     */
    public function getCriterionTargetList()
    {
        return $this->container['criterionTargetList'];
    }

    /**
     * Sets criterionTargetList
     *
     * @param \Yahoo\Model\AdGroupRetargetingListServiceCriterionTargetList|null $criterionTargetList criterionTargetList
     *
     * @return $this
     */
    public function setCriterionTargetList($criterionTargetList)
    {
        $this->container['criterionTargetList'] = $criterionTargetList;

        return $this;
    }

    /**
     * Gets excludedType
     *
     * @return \Yahoo\Model\AdGroupRetargetingListServiceExcludedType|null
     */
    public function getExcludedType()
    {
        return $this->container['excludedType'];
    }

    /**
     * Sets excludedType
     *
     * @param \Yahoo\Model\AdGroupRetargetingListServiceExcludedType|null $excludedType excludedType
     *
     * @return $this
     */
    public function setExcludedType($excludedType)
    {
        $this->container['excludedType'] = $excludedType;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


