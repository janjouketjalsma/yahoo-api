<?php
/**
 * RetargetingListServiceRuleItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Yahoo!広告 検索広告 API リファレンス / Yahoo! Ads Search Ads API Reference
 *
 * <div lang=\"ja\">Yahoo!広告 検索広告 APIのWebサービスについて説明します。<br> 「Try it out」のご利用には、事前にアプリケーションの登録が必要です。また、アプリケーションのリダイレクトURIの1つに<br> https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.htmlを登録してください。 </div> <div lang=\"en\">Search Ads API Web Services supported in Yahoo! Ads API.<br> When you use \"Try it out\", you need to register your application in advance.<br> As one of redirect URI for application, you need to set \"https://yahoojp-marketing.github.io/ads-search-api-documents/oauth2-redirect.html\". </div>
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Yahoo\Model;

use \ArrayAccess;
use \Yahoo\ObjectSerializer;

/**
 * RetargetingListServiceRuleItem Class Doc Comment
 *
 * @category Class
 * @description &lt;div lang&#x3D;\&quot;ja\&quot;&gt;RetargetingListServiceRuleItemは、ルールの評価条件を保持するオブジェクトです。&lt;br&gt; このフィールドは、ADDおよびSET時に必須となります。&lt;/div&gt;&lt;div lang&#x3D;\&quot;en\&quot;&gt;RetargetingListServiceRuleItem is an object that holds evaluation condition of rule. &lt;br&gt;This field is required in ADD and SET operation.&lt;/div&gt;
 * @package  Yahoo
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RetargetingListServiceRuleItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'RetargetingListServiceRuleItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'customKeyRuleItem' => '\Yahoo\Model\RetargetingListServiceCustomKeyRuleItem',
        'ruleOperator' => '\Yahoo\Model\RetargetingListServiceRuleOperator',
        'ruleType' => '\Yahoo\Model\RetargetingListServiceRuleType',
        'urlRuleItem' => '\Yahoo\Model\RetargetingListServiceUrlRuleItem',
        'value' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'customKeyRuleItem' => null,
        'ruleOperator' => null,
        'ruleType' => null,
        'urlRuleItem' => null,
        'value' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'customKeyRuleItem' => 'customKeyRuleItem',
        'ruleOperator' => 'ruleOperator',
        'ruleType' => 'ruleType',
        'urlRuleItem' => 'urlRuleItem',
        'value' => 'value'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'customKeyRuleItem' => 'setCustomKeyRuleItem',
        'ruleOperator' => 'setRuleOperator',
        'ruleType' => 'setRuleType',
        'urlRuleItem' => 'setUrlRuleItem',
        'value' => 'setValue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'customKeyRuleItem' => 'getCustomKeyRuleItem',
        'ruleOperator' => 'getRuleOperator',
        'ruleType' => 'getRuleType',
        'urlRuleItem' => 'getUrlRuleItem',
        'value' => 'getValue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['customKeyRuleItem'] = isset($data['customKeyRuleItem']) ? $data['customKeyRuleItem'] : null;
        $this->container['ruleOperator'] = isset($data['ruleOperator']) ? $data['ruleOperator'] : null;
        $this->container['ruleType'] = isset($data['ruleType']) ? $data['ruleType'] : null;
        $this->container['urlRuleItem'] = isset($data['urlRuleItem']) ? $data['urlRuleItem'] : null;
        $this->container['value'] = isset($data['value']) ? $data['value'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets customKeyRuleItem
     *
     * @return \Yahoo\Model\RetargetingListServiceCustomKeyRuleItem|null
     */
    public function getCustomKeyRuleItem()
    {
        return $this->container['customKeyRuleItem'];
    }

    /**
     * Sets customKeyRuleItem
     *
     * @param \Yahoo\Model\RetargetingListServiceCustomKeyRuleItem|null $customKeyRuleItem customKeyRuleItem
     *
     * @return $this
     */
    public function setCustomKeyRuleItem($customKeyRuleItem)
    {
        $this->container['customKeyRuleItem'] = $customKeyRuleItem;

        return $this;
    }

    /**
     * Gets ruleOperator
     *
     * @return \Yahoo\Model\RetargetingListServiceRuleOperator|null
     */
    public function getRuleOperator()
    {
        return $this->container['ruleOperator'];
    }

    /**
     * Sets ruleOperator
     *
     * @param \Yahoo\Model\RetargetingListServiceRuleOperator|null $ruleOperator ruleOperator
     *
     * @return $this
     */
    public function setRuleOperator($ruleOperator)
    {
        $this->container['ruleOperator'] = $ruleOperator;

        return $this;
    }

    /**
     * Gets ruleType
     *
     * @return \Yahoo\Model\RetargetingListServiceRuleType|null
     */
    public function getRuleType()
    {
        return $this->container['ruleType'];
    }

    /**
     * Sets ruleType
     *
     * @param \Yahoo\Model\RetargetingListServiceRuleType|null $ruleType ruleType
     *
     * @return $this
     */
    public function setRuleType($ruleType)
    {
        $this->container['ruleType'] = $ruleType;

        return $this;
    }

    /**
     * Gets urlRuleItem
     *
     * @return \Yahoo\Model\RetargetingListServiceUrlRuleItem|null
     */
    public function getUrlRuleItem()
    {
        return $this->container['urlRuleItem'];
    }

    /**
     * Sets urlRuleItem
     *
     * @param \Yahoo\Model\RetargetingListServiceUrlRuleItem|null $urlRuleItem urlRuleItem
     *
     * @return $this
     */
    public function setUrlRuleItem($urlRuleItem)
    {
        $this->container['urlRuleItem'] = $urlRuleItem;

        return $this;
    }

    /**
     * Gets value
     *
     * @return string|null
     */
    public function getValue()
    {
        return $this->container['value'];
    }

    /**
     * Sets value
     *
     * @param string|null $value <div lang=\"ja\">評価値です。<br> ADDおよびSET時、このフィールドは必須となります。<br>※括弧（()）、シングルクォート（&#39;）、ダブルクォート（&#34;）、タブ（ ）は利用できません。<br>※250文字まで指定可能です。</div><div lang=\"en\">Evaluation value.<br>*Cannot use: bracket, single quote, double quote, and tab.<br>*Can select up to 250 characters. <br>This field is required in ADD and SET operation.</div>
     *
     * @return $this
     */
    public function setValue($value)
    {
        $this->container['value'] = $value;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


